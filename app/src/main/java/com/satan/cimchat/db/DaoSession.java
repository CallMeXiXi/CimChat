package com.satan.cimchat.db;

import android.database.sqlite.SQLiteDatabase;

import com.satan.cimchat.model.Chat;
import com.satan.cimchat.model.Contact;
import com.satan.cimchat.model.Message;
import com.satan.cimchat.model.User;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig chatDaoConfig;
    private final DaoConfig userDaoConfig;

    private final MessageDao messageDao;
    private final ContactDao contactDao;
    private final ChatDao chatDao;
    private final UserDao userDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        chatDaoConfig = daoConfigMap.get(ChatDao.class).clone();
        chatDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        messageDao = new MessageDao(messageDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        chatDao = new ChatDao(chatDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Message.class, messageDao);
        registerDao(Contact.class, contactDao);
        registerDao(Chat.class, chatDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        messageDaoConfig.getIdentityScope().clear();
        contactDaoConfig.getIdentityScope().clear();
        chatDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public ChatDao getChatDao() {
        return chatDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
